apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: back-end
  name: back-end
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: back-end
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/book-api-project-node-network: "true"
        io.kompose.service: back-end
    spec:
      containers:
        - image: bookapiproject.azurecr.io/k8sdemo:back-end
          name: back-end
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          command: ["npm", "run", "start"]
          tty: true
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
      app: myApp
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/book-api-project-node-network: "true"
        io.kompose.service: db
        app: myApp
    spec:
      containers:
        - env:
            - name: POSTGRES_DATABASE
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: prateeknarayanan
          image: postgres
          name: db
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          tty: true
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: front-end
    app: myApp
  name: front-end
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: front-end
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/book-api-project-node-network: "true"
        io.kompose.service: front-end
        app: myApp
    spec:
      containers:
        - image: bookapiproject.azurecr.io/k8sdemo:front-end
          name: front-end
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          command: ["npm", "run", "start"]
          tty: true
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nginx
      app: myApp
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/book-api-project-node-network: "true"
        io.kompose.service: nginx
        app: myApp
    spec:
      containers:
        - image: nginx
          name: nginx
          ports:
            - containerPort: 80
              hostPort: 8000
              protocol: TCP
          tty: true
      restartPolicy: Always
